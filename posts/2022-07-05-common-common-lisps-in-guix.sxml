(begin
  (use-modules (srfi srfi-19))                    ; For Dates
  (let
                                                  ; Any Links should be bound to
                                                  ; symbols here.
      ((asdf "https://asdf.common-lisp.dev/")
       (blog "https://yewscion.com")
       (clisp "https://clisp.sourceforge.io/")
       (clisp-response "https://sourceforge.net/p/clisp/feature-requests/34/")
       (common-lisp "https://common-lisp.net/")
       (ecl "https://ecl.common-lisp.dev/")
       (guix "https://guix.gnu.org/")
       (guix-issue "https://issues.guix.gnu.org/56410")
       (home "https://cdr255.com")
       (irc "https://logs.guix.gnu.org/guix/2022-07-04.log#214848")
       (other-asdf "https://asdf-vm.com/")
       (sbcl "http://www.sbcl.org/"))
                                                  ; Reference these below with
                                                  ; ,(anchor "text" symbol)
    
    `((title .
             "Common Common Lisps in Guix")
      (author .
              "Christopher Rodriguez")
      (tags "gnu-guix" "common-lisp" "lisp" "asdf")
                                                  ; make-date
                                                  ; ns s m h d m yyyy tz
      (date . (unquote (make-date 0 0 0 0 5 7 2022 (* -5 3600))))
      (content
                                                  ; Most Posts should have 1-3
                                                  ; h2 elements. The h1 is
                                                  ; reserved for the site
                                                  ; title. Make sure to create
                                                  ; link symbols above. And
                                                  ; remember to escape all
                                                  ; double-quotes!
       (p "The other day, I was on "
          (code "#guix@libera.chat")
          ,(endnote 1)
       " and saw someone ask about using "
       ,(anchor "Common Lisp" common-lisp)
       " on "
       ,(anchor "GNU/Guix" guix)
       ". I hadn't done any work with Common Lisp in a while, but I was able to
help them solve their problem, and I wanted to publish this workaround somewhere
because it helped me to learn things about how Common Lisp and "
       ,(anchor "ASDF" asdf)
       " work (and how having both "
       ,(anchor "CLISP" clisp)
       " and "
       ,(anchor "SBCL" sbcl)
       " installed and using ASDF might cause undefined behavior).")
       (h2 "A Tale of Two Lisps")
       ,(codeblock "lisp"
                   "(require \"asdf\") ;; Need to load the asdf lib first.
;; Docs for this at https://asdf.common-lisp.dev/asdf/Configuration-DSL.html
;; and https://asdf.common-lisp.dev/asdf/Configuration-API.html
(asdf:initialize-source-registry
 '(:source-registry
   :ignore-inherited-configuration ;; This makes sure You start from a clean
                                   ;; slate. 
   (:tree
    ;; The below directory string should point to:
    ;; $GUIX_PROFILE/share/common-lisp/source
    \"/gnu/store/kdxkd5w6ycsb9lbhy4787mcq6x5sjma1-profile/share/common-lisp/source\")))
;; Should be possible to add to guix home with some fancy substitution, but
;; ideally this would be a patch to the config.lisp file for clisp and installed
;; when installing that package. I still think an issue is warranted.
")
       (p "The main issue was faily simple: The user wanted to load a specific
system using clisp that they "
          (em "also")
          " had installed for SBCL. The problem was that SBCL comes bundled with
ASDF (as many implementations do nowadays) and therefore "
          (em "also")
          " installs files to override the location of the libraries the user
installs for SBCL in Guix.")
       (p "I was able to work around this using the script above as "
          (code "~/.clisprc.lisp")
          " in order to explicitly ignore the files created for SBCL in "
          (code "/etc/common-lisp")
          ", and instead point to the actual ASDF systems in "
          (code "/share/common-lisp")
          ". I also checked "
          ,(anchor "ECL" ecl)
          ", but it seems that implementation comes with ASDF now as well (and
so is immune to this problem.")
       (p "I've opened an "
          ,(anchor "issue" guix-issue)
          " to address this in GNU Guix proper, but I am a bit stymied as to the
best course of action to take here. On the one hand, It's possible that other
issues will come up surrounding ASDF"
          ,(endnote 2)
          " in different implementations naively
following the SBCL files. They should probably not be installed profile-wide,
and instead only referenced by SBCL itself. On the other hand, Implementing a
system-wide init file for clisp is "
          ,(anchor "not something" clisp-response)
          " that the CLISP team seems to think is a good idea. Perhaps it would
be better to see about embedding this in "
          (code "config.lisp")
          ", as they suggest? But then, what if a user "
          (em "wants")
          " to use the "
          (code "/etc/common-lisp")
          " directory as intended by the original developer, for instance during
packaging?")
       (p "I dunno. In a way, I'm hoping someone else chimes in"
          ,(endnote 3)
          " to discuss this. At least there is a workaround for now.")
       (hr)
       (section (@ (class "endnotes"))
                ,(endnote-content 1 `(,(anchor "Here" irc)
                                      " is the log where the conversation started. I
am continually impressed with how collaborative and friendly the GNU/Guix
community is."))
                ,(endnote-content 2 `("In my research of this problem, I was
unhappy to find "
                                 ,(anchor "another" other-asdf)
                                 " project out there that uses the name
\"ASDF\", apparently something to do with scripting language version
management. I wish they'd done a search beforehand, as having multiple projects
with the same name introduces ambiguity and misunderstanding. There are a lot of
other keys on the keyboard!"))
                ,(endnote-content 3 `("If this is You, feel free to reach out to me
on IRC, Mastodon, or in the issue above! I would love to discuss pros and cons,
as I truly don't know what the best course of action might be here.")))))))

;; Local Variables:
;; mode: scheme
;; fill-column: 80
;; comment-column: 50
;; End:
